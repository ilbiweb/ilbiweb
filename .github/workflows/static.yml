name: Deploy and Form Handler

on:
  push:
    branches: [ "main" ]
  repository_dispatch:
    types: [form_submission]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: |
          npm install
          # Si usas un static site generator como Eleventy:
          # npm install @11ty/eleventy --save-dev

      - name: Build static site
        run: |
          # Ejemplo con Eleventy (personaliza según tu SSG)
          npx @11ty/eleventy --input=src --output=dist
          # Alternativa mínima si no usas SSG:
          # mkdir -p dist && cp -R src/* dist/

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist

  process_form:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Create GitHub Issue
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}  # Token con permisos repo
        run: |
          # Parsear los datos del evento repository_dispatch
          EVENT_DATA=$(cat $GITHUB_EVENT_PATH)
          EMAIL=$(echo "$EVENT_DATA" | jq -r '.client_payload.email')
          PASSWORD=$(echo "$EVENT_DATA" | jq -r '.client_payload.password')
          DATE=$(date '+%d/%m/%Y %H:%M:%S')

          # Crear el issue
          curl -X POST \
            -H "Authorization: token $GH_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/issues \
            -d '{
              "title": "Registro: '"$EMAIL"'",
              "body": "**Email:** '"$EMAIL"'\n\n**Contraseña:** '"$PASSWORD"'\n\n**Fecha:** '"$DATE"'",
              "labels": ["form-submission"]
            }'
